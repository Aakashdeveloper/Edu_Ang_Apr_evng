https://code.visualstudio.com/
https://github.com/
https://github.com/Aakashdeveloper
https://nodejs.org/en/

AngularJs > Angular2 >4>5>6>7>8>9

NPM=> Node Package Manager

package.json

JSON> JavaScript Object Notation
[
    {
        "name":"AA"
        "class":"UI"
    },
    {
        "name":"AA"
        "class":"UI"
    }
]


//////////////////
Step to Create package.json
////////////////////

**NodeJs must be installed in system
>> Navigate to folder where you want to generate package.json using CMD/Terminal
>> npm init
>> Answer all Question
>> Type "yes"

>> Navigate to folder where you want to generate package.json using CMD/Terminal
>> npm init -y 


///Local Package/////
>> Navigate to folder where you want to install using CMD/Terminal
>> npm i zone.js

///Global Package//////
Install in system directly
> Generate the application
> Need to have root access

>>WIN<<<<
> Run CMD as Admin
> npm i -g @aakashdeveloper/create-node-app

>>Mac/Linux<<<<
> Open Terminal
> sudo npm i -g @aakashdeveloper/create-node-app


////////////////////////////
Step to Setup Angular APP
//////////////////////////////


>>>>Win<<<<<<
-----One Time--------
> Run CMD as Admin
> npm i -g @angular/cli

-----Next evey time-------
>> Navigate to folder where you want to generate application using CMD/Terminal
> ng new myapp
> cd myapp
> npm start
> localhost:4200


>>>>Mac<<<<<<
-----One Time--------
> Open Terminal
> sudo npm i -g @angular/cli

-----Next evey time-------
> Navigate to folder where you want to generate application using CMD/Terminal
> ng new myapp
> cd myapp
> npm start
> localhost:4200



//////////////////////////////////////
    Building Block Of Angular
/////////////////////////////////////
Module      => Module is parent of application(ngModule)
Component   => HTML,css,Logic (component)
Pipe        => Run time data change (pipe,pipeTransform)
Service     => To connect with external agent(Dependency Injection) (Injectble)
Routing     => To Manage Multiple page (ngModule)
main module
main component

 
/////BootStrap///////

angular.json ==> main.ts => app.module.ts => App.component.ts
>>>>>>>>>>Compile<<<<<<<<<<<<<<<<<<<<
browser will run index.html



//////////////////////////////////////
   File Walkthrough
/////////////////////////////////////
tslint.json ==> make strutcure of code
tsconfig.spec.json => help to locate test files
tsconfig.json => it will tell where is build code and which version to target
tsconfig.app.json => to locate application file
ReadMe.md => Detail Description of application
package.json => used for Dependency, commands and small Description
package-lock.json => used for child Dependency
angular.json => fist file to run and locate all content of application
.gitignore => thing we dont want to push to git
.editorconfig => For editor standards
src/style.css => main style file of application
src/polyfills => help to render application of all browser
src/index.html => first and only browser will load 
src/favicon=> simple icon
src/assets => for all static file images /videos/script
src/environment => help to build for prod /dev 
src/app => all development happen here
src/main => this will help to locate main module

///////CLI//////

ng g c product
ng generate component product

var a =10
undefined
a>10?"hii":"bie"
"bie"
a==10?"hii":"bie"
"hii"
a==10?a+1:a-1
11
a>10?a+1:a-1
9

One Way Binding
> Data Binding  {{}}
> Property []
> Event binding ()
Two Way Binding [()]
ngstyle
ngClass
*ngFor
*ngIf
pipe
customepipe


Structural directive
*ngFor
*ngIf
*ngClass

lowercase
uppercase
currency
date
perctange
titlecase


map 
filter
indexof

Math.floor(Math.random()*(50-5))+5


var a = [0,1,2,3]
a.map((data) => { return data*2})
[0,2,4,6]
a.filter((data) => { return data*2})
[1,2,3]

var age = [56,34,23,43,25,30]
age.filter((data) => {return data>30})
(3)Â [56, 34, 43]


var a = [2,4,5,6,7]
a.map((data) => { return data*2})
[4, 8, 10, 12, 14]

///////////////////////////
var myvar = []
for(var i=0;i<3;i++){
    myvar[i]=function(){
        console.log("I m in function ",i)
    }
}

for(j=0;j<3;j++){
    myvar[j]()
}

//current
"I m in function  3"
"I m in function  3"
"I m in function  3"

//expected
"I m in function  0"
"I m in function  1"
"I m in function  2"
/////////////////////////////


var city = ["Delhi","Mumbai","Paris","Helsinki","Boston"]


var city = ["Delhi","Mumbai","Paris","Helsinki","Boston"]
undefined
city.indexOf("Delhi")
0
city.indexOf("Paris")
2
city.indexOf("Amsterdam")
-1
city.indexOf("Nice")
-1



@Input(Parent => Child) (PropertyBinding)
@Output(Child=> Parent) (event Bindinhg)


/////////////
Dummy API
/////////////////
npm i -g json-server
json-server --watch db.json --port 8900



var add =(a,b) =>{ data = a+b}


ng-pristene  ng-touched    ng-valid
ng-dirty     ng-untouched  ng-invalid


---------------
Install mongodb

Window
> C:\data\db


Mac
sudo mkdir /System/Volumes/Data/data/db

linux
sudo mkdir /data/db

Window
C:/data/db

How to run mongodb
> Open two terminal 
    1> Mongo server (should alawys running)
    2> Mongo console ( To test query)

Use cmd and naviagte
> C:/Program/Mongo/3.4/bin
> mongod  (mongodb server)

>Use cmd and naviagte
> C:Program/Mongo/4.2/bin
> mongod (to start server)
> mongo (to connect with console)

Mac
> Open Terminal
> sudo mongod --dbpath /System/Volumes/Data/data/db
> Open Terminal
> mongo

linux
> Open Terminal
> sudo mongod --dbpath /data/db
> Open Terminal
> mongo

///////////////////////////
/******GetAllUser*****/
(GET)> http://localhost:5000/api/auth/users

/******Register*****/
(POST)> http://localhost:5000/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role":"user?"}


/******Login*****/
(POST) => http://localhost:5000/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => http://localhost:5000/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}
(response) => {userinfo}